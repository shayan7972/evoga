/*
 * This file was automatically generated by EvoSuite
 * Tue Oct 02 04:37:45 GMT 2018
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.ExecutionFilter;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class ExecutionFilter_ESTest extends ExecutionFilter_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(0, "", "", "", "", "", "");
      ExecutionFilter executionFilter1 = new ExecutionFilter(0, "", "", "", "", "", "");
      boolean boolean0 = executionFilter1.equals(executionFilter0);
      assertEquals(0, executionFilter1.m_clientId);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(0, "", "", "", "", "", "");
      executionFilter0.m_symbol = "";
      executionFilter0.m_acctCode = "^";
      ExecutionFilter executionFilter1 = new ExecutionFilter(0, "^", "", "", "", "rjY?.6nX/AOXAD\"6Y)", "");
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertEquals(0, executionFilter1.m_clientId);
      assertFalse(executionFilter1.equals((Object)executionFilter0));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter();
      ExecutionFilter executionFilter1 = new ExecutionFilter(1695, (String) null, (String) null, (String) null, "iuIU>E", "", "");
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertFalse(boolean0);
      assertEquals(1695, executionFilter1.m_clientId);
      assertEquals(0, executionFilter0.m_clientId);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter();
      ExecutionFilter executionFilter1 = new ExecutionFilter(0, "", "", "Uh@cpCJJaR", (String) null, (String) null, (String) null);
      // Undeclared exception!
      try { 
        executionFilter0.equals(executionFilter1);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
      }
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(284, "S", "S", "S", "S", "S", "S");
      // Undeclared exception!
      try { 
        executionFilter0.equals("");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.lang.String cannot be cast to com.ib.client.ExecutionFilter
         //
         verifyException("com.ib.client.ExecutionFilter", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(284, "S", "S", "S", "S", "S", "S");
      ExecutionFilter executionFilter1 = new ExecutionFilter(284, "S", "S", "S", "S", "S", "Y");
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertFalse(executionFilter1.equals((Object)executionFilter0));
      assertFalse(boolean0);
      assertEquals(284, executionFilter1.m_clientId);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(0, "", "", "", "", "", "");
      ExecutionFilter executionFilter1 = new ExecutionFilter(0, "", "", "", ">:FKgAY", "", "");
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertFalse(boolean0);
      assertFalse(executionFilter1.equals((Object)executionFilter0));
      assertEquals(0, executionFilter1.m_clientId);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(0, "B", "B", "B", "B", "B", "B");
      executionFilter0.m_acctCode = "";
      ExecutionFilter executionFilter1 = new ExecutionFilter(0, "", "B", "B", "!oKc?>/Lj{t", "B", "B");
      executionFilter1.m_time = "D";
      boolean boolean0 = executionFilter1.equals(executionFilter0);
      assertFalse(executionFilter1.equals((Object)executionFilter0));
      assertEquals(0, executionFilter1.m_clientId);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(0, "", "", "", "", "", "");
      ExecutionFilter executionFilter1 = new ExecutionFilter(0, "^", "", "^", "", "", "");
      boolean boolean0 = executionFilter1.equals(executionFilter0);
      assertEquals(0, executionFilter1.m_clientId);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter(284, "S", "S", "S", "S", "S", "S");
      ExecutionFilter executionFilter1 = new ExecutionFilter(0, "S", "S", "S", "S", "Y", "3V9e#i-&G");
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertEquals(284, executionFilter0.m_clientId);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter((-10), "i(X}qPj,", "i(X}qPj,", "i(X}qPj,", "i(X}qPj,", "i(X}qPj,", "i(X}qPj,");
      ExecutionFilter executionFilter1 = new ExecutionFilter((-10), "i(X}qPj,", "i(X}qPj,", "J!Kc>/{t", "i(X}qPj,", "J!Kc>/{t", "i(X}qPj,");
      boolean boolean0 = executionFilter0.equals(executionFilter1);
      assertFalse(boolean0);
      assertEquals((-10), executionFilter1.m_clientId);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter();
      boolean boolean0 = executionFilter0.equals((Object) null);
      assertEquals(0, executionFilter0.m_clientId);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      ExecutionFilter executionFilter0 = new ExecutionFilter();
      boolean boolean0 = executionFilter0.equals(executionFilter0);
      assertTrue(boolean0);
      assertEquals(0, executionFilter0.m_clientId);
  }
}
