/*
 * This file was automatically generated by EvoSuite
 * Fri Sep 28 03:18:23 GMT 2018
 */

package com.ib.client;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.shaded.org.mockito.Mockito.*;
import static org.evosuite.runtime.EvoAssertions.*;
import com.ib.client.EReader;
import com.ib.client.EWrapper;
import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.EOFException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PipedInputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.ViolatedAssumptionAnswer;
import org.junit.runner.RunWith;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EReader_ESTest extends EReader_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)53;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 0);
      double double0 = eReader0.readDoubleMax();
      assertEquals(7, byteArrayInputStream0.available());
      assertEquals(5.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)53;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 0);
      double double0 = eReader0.readDouble();
      assertEquals(7, byteArrayInputStream0.available());
      assertEquals(5.0, double0, 0.01);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 0);
      long long0 = eReader0.readLong();
      assertEquals(0L, long0);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)53;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 0);
      long long0 = eReader0.readLong();
      assertEquals(7, byteArrayInputStream0.available());
      assertEquals(5L, long0);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)46;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (-4662));
      // Undeclared exception!
      try { 
        eReader0.readIntMax();
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \".\"
         //
         verifyException("java.lang.NumberFormatException", e);
      }
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (-4662));
      int int0 = eReader0.readIntMax();
      assertEquals(Integer.MAX_VALUE, int0);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 0);
      boolean boolean0 = eReader0.readBoolFromInt();
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      byte[] byteArray0 = new byte[18];
      byteArray0[0] = (byte)53;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 0);
      boolean boolean0 = eReader0.readBoolFromInt();
      assertEquals(16, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 874);
      try { 
        eReader0.processMsg(56);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Pipe not connected
         //
         verifyException("java.io.PipedInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, (-586));
      // Undeclared exception!
      try { 
        eReader0.processMsg(55);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 5);
      // Undeclared exception!
      try { 
        eReader0.processMsg(49);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 0);
      // Undeclared exception!
      try { 
        eReader0.processMsg(42);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream();
      DataInputStream dataInputStream0 = new DataInputStream(pipedInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (-1080));
      // Undeclared exception!
      try { 
        eReader0.processMsg(41);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      byte[] byteArray0 = new byte[3];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 514, 798);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 514);
      // Undeclared exception!
      try { 
        eReader0.processMsg(39);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 0);
      // Undeclared exception!
      try { 
        eReader0.processMsg(34);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 22);
      // Undeclared exception!
      try { 
        eReader0.processMsg(27);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 22);
      // Undeclared exception!
      try { 
        eReader0.processMsg(24);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Fatal Error: Unknown message id. [id = -1, errorCode = 505]
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 33);
      try { 
        eReader0.processMsg(18);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (byte)51);
      // Undeclared exception!
      try { 
        eReader0.processMsg(16);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(eWrapper0).toString();
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (byte) (-1));
      boolean boolean0 = eReader0.processMsg((byte)14);
      assertEquals(4, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader((DataInputStream) null, eWrapper0, 1300);
      // Undeclared exception!
      try { 
        eReader0.processMsg(13);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("com.ib.client.EReader", e);
      }
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      byteArray0[0] = (byte)53;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 0);
      eReader0.run();
      assertEquals(0, byteArrayInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      byteArray0[0] = (byte)52;
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (byte)0);
      eReader0.run();
      assertEquals(0, byteArrayInputStream0.available());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      byte[] byteArray0 = new byte[5];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 0);
      try { 
        eReader0.processMsg((byte)3);
        fail("Expecting exception: EOFException");
      
      } catch(EOFException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.io.DataInputStream", e);
      }
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 31);
      boolean boolean0 = eReader0.processMsg((-1));
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      DataInputStream dataInputStream0 = new DataInputStream((InputStream) null);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 31);
      eReader0.stop();
      eReader0.run();
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      doReturn((String) null).when(eWrapper0).toString();
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, (byte)0);
      boolean boolean0 = eReader0.processMsg((byte)52);
      assertEquals(4, byteArrayInputStream0.available());
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      byte[] byteArray0 = new byte[9];
      ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
      DataInputStream dataInputStream0 = new DataInputStream(byteArrayInputStream0);
      EWrapper eWrapper0 = mock(EWrapper.class, new ViolatedAssumptionAnswer());
      EReader eReader0 = new EReader(dataInputStream0, eWrapper0, 0);
      double double0 = eReader0.readDoubleMax();
      assertEquals(1.7976931348623157E308, double0, 0.01);
  }
}
